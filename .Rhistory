install.packages("maps")
q("no")
install.packages("rJava")
install.packages("RProtoBuf")
install.packages("RProtoBuf")
install.packages("RCurl")
q("no")
install.packages("~/sigex/sigex-master.zip", repos = NULL, type = "win.binary")
devtools::install.github("mcelroy/sigex")
install.packages(c("cli", "fansi", "generics", "glue", "jsonlite", "magrittr", "pillar", "readr", "renv", "rlang", "testthat", "yaml"))
install.packages(c("cli", "fansi", "generics", "glue", "jsonlite", "magrittr", "pillar", "readr", "renv", "rlang", "testthat", "yaml"))
devtools::install_github("mcelroy/sigex")
devtools::install_github("tuckermcelroy/sigex")
q("no")
wd<-getwd()
setwd(dir = "C:/Users/bcmon/OneDrive/Documents/all")
install.packages("RProtoBuf")
install.packages("RCurl")
install.packages("rjd3toolkit_0.2.0.tar.gz", repos=NULL, type = "source", INSTALL_opts = "--no-multiarch")
install.packages("rjd3modelling_0.2.0.tar.gz", repos=NULL, type = "source", INSTALL_opts = "--no-multiarch")
install.packages("rjd3modelling_0.2.0.tar.gz", repos=NULL, type = "source", INSTALL_opts = "--no-multiarch")
install.packages("rjd3arima_0.2.0.tar.gz", repos=NULL, type = "source", INSTALL_opts = "--no-multiarch")
install.packages("rjd3sa_0.2.0.tar.gz", repos=NULL, type = "source", INSTALL_opts = "--no-multiarch")
install.packages("rjd3tramoseats_0.2.0.tar.gz", repos=NULL, type = "source", INSTALL_opts = "--no-multiarch")
install.packages("rjd3x13_0.2.0.tar.gz", repos=NULL, type = "source", INSTALL_opts = "--no-multiarch")
install.packages("RJDemetra3_0.2.0.tar.gz", repos=NULL, type = "source", INSTALL_opts = "--no-multiarch")
install.packages("rjd3sts_0.2.0.tar.gz", repos=NULL, type = "source", INSTALL_opts = "--no-multiarch")
install.packages("rjd3highfreq_0.2.0.tar.gz", repos=NULL, type = "source", INSTALL_opts = "--no-multiarch")
setwd(dir = wd)
setwd("airutilities")
devtools::document()
devtools::check()
install.packages("checkmate")
devtools::check()
setwd("../sautilities")
devtools::document()
devtools::check()
setwd("../blsplotR")
devtools::document()
devtools::check()
devtools::run_examples()
devtools::run_examples()
devtools::run_examples()
devtools::document()
devtools::run_examples()
devtools::document()
devtools::run_examples()
devtools::document()
devtools::run_examples()
devtools::check()
devtools::check()
devtools::build()
setwd("../sautilities")
devtools::check()
devtools::document()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::build()
setwd("../airutilities")
devtools::check()
devtools::build()
setwd("../refweekreg")
devtools::check()
devtools::document()
devtools::run_examples()
devtools::check()
devtools::build()
devtools::check()
devtools::check()
devtools::build()
setwd("../airutilities")
?devtools::github_release
install_github("bcmonsell/airutilities")
devtools::install_github("bcmonsell/airutilities")
